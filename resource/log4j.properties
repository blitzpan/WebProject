#可以设置级别：debug>info>error
#debug：显示debug、info、error
#info：显示info、error
#error：只error
#log4j.rootLogger=debug,appender1
#log4j.rootLogger=info,appender1
#log4j.rootLogger=error,appender1

#stdout输出到控制台
#R0输出到公共的文件
#R1只将test.Test2.java中的信息输出到一个专门的文件logs/test2/all2.log
#log4j.rootCategory=debug, stdout , R0#刚开始不知道，这里写成了debug，发现后台一直在打印日志，特别多，后来发现日志级别是debug。改成info就世界安静了
log4j.rootCategory=info, stdout , R0
#R1只打印Test2类中的异常，可以实现某些类中的异常新建单独文件打印。
log4j.logger.test.Test2=debug, R1
#控制台配置
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss} [%p] %c - %m%n
#整个项目输出的文件
log4j.appender.R0=org.apache.log4j.DailyRollingFileAppender
log4j.appender.R0.layout=org.apache.log4j.PatternLayout
log4j.appender.R0.layout.ConversionPattern=%-20d{yyyy-MM-dd HH:mm:ss} [%p](%c\:%L)(%t) - %m%n
#将头一天的日志文件名改成logs/all.log.2014-12-31
log4j.appender.R0.DatePattern='.'yyyy-MM-dd
#将日志文件放在logs/all.log中
log4j.appender.R0.File=logs/all.log

#R1指定类输出到指定的日志文件
#log4j.appender.R1=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.R1.layout=org.apache.log4j.PatternLayout
#log4j.appender.R1.layout.ConversionPattern=%-20d{yyyy-MM-dd HH:mm:ss} [%p](%C\:%L)(%t) - %m%n
##将头一天的日志文件名改成logs/all.log.2014-12-31
#log4j.appender.R1.DatePattern='.'yyyy-MM-dd
##将日志文件放在logs/all.log中
#log4j.appender.R1.File=logs/test2/test2.log